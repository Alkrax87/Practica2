//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteEscritorioCSharp.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WebService3Soap")]
    public interface WebService3Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Listar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Listar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Listar", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Agregar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Agregar(string codAlumno, string apellidos, string nombres, string lugarNac, System.DateTime fechaNac, string codEscuela);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Agregar", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarAsync(string codAlumno, string apellidos, string nombres, string lugarNac, System.DateTime fechaNac, string codEscuela);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Eliminar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Eliminar(string codAlumno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Eliminar", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarAsync(string codAlumno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Actualizar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Actualizar(string codAlumno, string apellidos, string nombres, string lugarNac, System.DateTime fechaNac, string codEscuela);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Actualizar", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarAsync(string codAlumno, string apellidos, string nombres, string lugarNac, System.DateTime fechaNac, string codEscuela);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Buscar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Buscar(string apellido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Buscar", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarAsync(string apellido);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService3SoapChannel : ClienteEscritorioCSharp.ServiceReference1.WebService3Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService3SoapClient : System.ServiceModel.ClientBase<ClienteEscritorioCSharp.ServiceReference1.WebService3Soap>, ClienteEscritorioCSharp.ServiceReference1.WebService3Soap {
        
        public WebService3SoapClient() {
        }
        
        public WebService3SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService3SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService3SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService3SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet Listar() {
            return base.Channel.Listar();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarAsync() {
            return base.Channel.ListarAsync();
        }
        
        public string[] Agregar(string codAlumno, string apellidos, string nombres, string lugarNac, System.DateTime fechaNac, string codEscuela) {
            return base.Channel.Agregar(codAlumno, apellidos, nombres, lugarNac, fechaNac, codEscuela);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarAsync(string codAlumno, string apellidos, string nombres, string lugarNac, System.DateTime fechaNac, string codEscuela) {
            return base.Channel.AgregarAsync(codAlumno, apellidos, nombres, lugarNac, fechaNac, codEscuela);
        }
        
        public string[] Eliminar(string codAlumno) {
            return base.Channel.Eliminar(codAlumno);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarAsync(string codAlumno) {
            return base.Channel.EliminarAsync(codAlumno);
        }
        
        public string[] Actualizar(string codAlumno, string apellidos, string nombres, string lugarNac, System.DateTime fechaNac, string codEscuela) {
            return base.Channel.Actualizar(codAlumno, apellidos, nombres, lugarNac, fechaNac, codEscuela);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarAsync(string codAlumno, string apellidos, string nombres, string lugarNac, System.DateTime fechaNac, string codEscuela) {
            return base.Channel.ActualizarAsync(codAlumno, apellidos, nombres, lugarNac, fechaNac, codEscuela);
        }
        
        public System.Data.DataSet Buscar(string apellido) {
            return base.Channel.Buscar(apellido);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarAsync(string apellido) {
            return base.Channel.BuscarAsync(apellido);
        }
    }
}
